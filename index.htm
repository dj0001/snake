<!DOCTYPE html>
<html lang="en">
<head>
<title>HTML5 Snake Game - GoldFire Studios</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="keywords" content="snake game, html5 game, html5 snake"/>
<meta name="description" content="The classic game of snake made with HTML5, using the canvas tag. This is based by James Simpson at GoldFire Studios."/>
<meta name="theme-color" content="#5ac1f2">
<link rel="manifest" href="snake.manifest">
<link rel="icon" type="image/png" sizes="144x144" href="snake.png">

<style>
html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,dl,dt,dd,ol,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;}:focus{outline:0;}a:active{outline:none;}body{line-height:1;color:black;background:white;}table{border-collapse:separate;border-spacing:0;}caption,th,td{text-align:left;font-weight:normal;}blockquote:before,blockquote:after,q:before,q:after{content:"";}blockquote,q{quotes:"" "";}body{font-family:verdana,arial,helvetica;font-size:14px;margin:0;padding:0;background-color:#eaeaea;color:#000;width:100%;height:100%;}a{color:#0878a7;text-decoration:none;}a:hover{font-weight:bold;}#board{border:1px solid #6c6a6a;margin:7px;position:absolute;top:40px;background:#55af43 url(images/checkered_bg.png) repeat;box-shadow:inset 0 0 20px #30532a;}#header{height:10px;position:absolute;padding:15px 7px;top:0;left:0;background:-webkit-gradient(linear,0% 0%,0% 100%,from(#c3c1c1),to(#eaeaea));background:-webkit-linear-gradient(top,#fff,#eaeaea);background:-moz-linear-gradient(top,#fff,#eaeaea);background:-ms-linear-gradient(top,#fff,#eaeaea);background:-o-linear-gradient(top,#fff,#eaeaea);}#title{position:absolute;top:0;left:0;width:300px;padding:15px 7px;}#score{position:absolute;top:0;left:50%;padding-top:13px;margin-left:30px;font-size:22px;font-weight:900;}#icons{position:absolute;right:7px;top:11px;width:150px;height:27px;}#icons .pause{width:27px;height:27px;background:url(images/snake_icons.png) 0 0 no-repeat;cursor:pointer;position:absolute;right:0;}#icons .pause:hover{background-position:0 -28px;}#icons .play{width:27px;height:27px;background:url(images/snake_icons.png) -32px 0 no-repeat;cursor:pointer;position:absolute;right:0;display:none;}#icons .play:hover{background-position:-32px -28px;}#icons .easy{width:19px;height:27px;background:url(images/snake_icons.png) -63px 0 no-repeat;cursor:pointer;position:absolute;right:127px;}#icons .easy:hover,#icons .easy_active{background-position:-63px -28px;}#icons .medium{width:19px;height:27px;background:url(images/snake_icons.png) -92px 0 no-repeat;cursor:pointer;position:absolute;right:93px;}#icons .medium:hover,#icons .medium_active{background-position:-92px -28px;}#icons .hard{width:19px;height:27px;background:url(images/snake_icons.png) -121px 0 no-repeat;cursor:pointer;position:absolute;right:59px;}#icons .hard:hover,#icons .hard_active{background-position:-121px -28px;}#overlay{position:absolute;top:46px;left:0;background:#000;opacity:.7;display:none;text-align:center;z-index:99;}#start,#paused,#game_over{width:100%;height:100%;text-align:center;color:#fff;display:none;}#start .play_now{background:#fff;color:#000;padding:20px;font-size:400%;font-weight:bold;border-radius:6px;width:40%;margin:0 auto;cursor:pointer;}#start .play_now:hover{opacity:.5;}#game_over .play_again{background:#fff;color:#000;padding:10px;font-size:50%;font-weight:bold;border-radius:6px;width:30%;margin:0 auto;cursor:pointer;}#game_over .play_again:hover{opacity:.5;}
</style>
<script type="text/javascript">
	// setup environment variables
	var canvas = null,
		cur_pos = {x: 50, y: 50},
		grid_size = 10,
		dir = 'right',
		body = [],
		body_len = 3,
		food_point = null,
		ctx = null,
		score = 0,
		snake_movement = null,
		press_keys = true,
		speed = 100;
	
	function start(){
		// make sure the canvas is empty
		ctx.clearRect(0,0, canvas.width, canvas.height);
		
		// clear the overlay
		document.getElementById('overlay').style.display = document.getElementById('start').style.display = document.getElementById('game_over').style.display = 'none';
		
		// reset environment
		cur_pos = {x: 50, y: 50};
		body = [];
		body_len = 3;
		make_food();
		draw_snake();
		dir = 'right';
		score = 0;
		
		// clear snake variable if it exists
		if (snake_movement) clearInterval(snake_movement);
		
		// start game
		play();
	}
	
	// check for browser support
	function canvas_support() {
		canvas = document.getElementById('board');
		if (canvas.getContext) {
			// fill the screen with the board
			canvas.width = Math.floor(((window.innerWidth - 16) / 10)) * 10;
			canvas.height = Math.floor(((window.innerHeight - 56) / 10)) * 10;
			document.getElementById('header').style.width = canvas.width + 'px';
			
			// set w & h of start, pause, and game over screens
			document.getElementById('overlay').style.width = canvas.width + 2 + 'px';
			document.getElementById('overlay').style.height = canvas.height + 2 + 'px';
			
			// figure out the new margin
			if (window.innerWidth - canvas.width > 14) {
				var new_margin = Math.round((window.innerWidth - canvas.width) / 2 - 2) + 'px';
				canvas.style.marginLeft = new_margin;
				document.getElementById('header').style.paddingLeft = document.getElementById('title').style.paddingLeft = new_margin;
				//document.getElementById('header').width = document.getElementById('header').width + new_margin + 'px';
				document.getElementById('overlay').style.marginLeft = new_margin;
			}
			
			// start the game
			ctx = canvas.getContext('2d');
			document.getElementById('overlay').style.display = document.getElementById('start').style.display = 'block';
		} else {
			alert("We're sorry, but your browser does not support the canvas tag. Please use a more modern browser (Google Chrome is a great choice).");
		}
	}
	
	// capture keystrokes to move the snake
	window.onkeydown = function(event) {
		if (!press_keys) return null;
		
		var keyCode = (event == null) ? window.event.keyCode : keyCode = event.keyCode;
		
		switch (keyCode) {
			// left & A
			case 65:
			case 37:
				if (dir != 'right') left();
				break;
			
			// up & W
			case 87:
			case 38:
				if (dir != 'down') up();
				break;
			
			// right & D
			case 68:
			case 39:
				if (dir != 'left') right();
				break;
			
			// down & S
			case 83:
			case 40:
				if (dir != 'up') down();
				break;
			
			default: 
			break; 
		} 
	}
	
	function move_snake(){
		switch (dir) {
			case 'left':
				left();
				break;
			
			case 'up':
				up();
				break;
			
			case 'right':
				right();
				break;
			
			case 'down':
				down();
				break;
		}
	}
	
	function draw_snake() {
		// make sure the snake hasn't eaten itself
		if (body.some(eat_snake)) {
			game_over();
			return false;
		}
		
		// set the color of the snake
		ctx.fillStyle = 'rgb(254,215,0)';
		
		// add a piece onto the array of body blocks
		body.push([cur_pos['x'], cur_pos['y']]);
		
		// draw the piece
		ctx.fillRect(cur_pos['x'], cur_pos['y'], grid_size, grid_size);
		
		// remove ones that are further back
		if (body.length > body_len) {
			var remove = body.shift();
			ctx.clearRect(remove[0], remove[1], grid_size, grid_size);
		}
		
		// check if they are eating the food
		if (cur_pos['x'] == food_point[0] && cur_pos['y'] == food_point[1]) {
			make_food();
			body_len++;
			update_score();
		}
	}
	
	function left_pos() {
		return cur_pos['x'] - grid_size;  
	}
	
	function right_pos() {
		return cur_pos['x'] + grid_size;
	}
	
	function up_pos() {
		return cur_pos['y'] - grid_size;  
	}
	
	function down_pos() {
		return cur_pos['y'] + grid_size;
	}
	
	// move up
	function up() {
		if (up_pos() >= 0) {
			do_move('up', 'y', up_pos());
		} else {
			auto_dir('x');
		}
	}
	
	// move down
	function down() {
		if (down_pos() < canvas.height) {
			do_move('down', 'y', down_pos());    
		} else {
			auto_dir('x');
		}
	}
	
	// move left
	function left() {
		if (left_pos() >= 0) {
			do_move('left', 'x', left_pos());
		} else {
			auto_dir('y');
		}
	}
	
	// move right
	function right() {
		if (right_pos() < canvas.width) {
			do_move('right', 'x', right_pos());
		} else {
			auto_dir('y');
		}
	}
	
	function do_move(new_dir, xy, value) {
		dir = new_dir;
		cur_pos[xy] = value;
		draw_snake();
	}
	
	// decide which direction to go after hitting the wall
	function auto_dir(xy) {
		a = (xy == 'x') ? (cur_pos['x'] > canvas.width / 2) ? left() : right() : (cur_pos['y'] > canvas.height / 2) ? up() : down();
	}
	
	function make_food() {
		food_point = [Math.floor(Math.random() * (canvas.width / grid_size)) * grid_size, Math.floor(Math.random() * (canvas.height / grid_size)) * grid_size];
		if (body.some(has_point)) {
			make_food();
		} else {
			ctx.fillStyle = 'rgb(146,7,0)';
			ctx.fillRect(food_point[0], food_point[1], grid_size, grid_size);
		};
	}
	
	// see if the point for the food is under the snake's body
	function has_point(element, index, array) {
		return (element[0] == food_point[0] && element[1] == food_point[1]);
	}
	
	// see if the snake is on top of himself
	function eat_snake(element, index, array) {
		return (element[0] == cur_pos['x'] && element[1] == cur_pos['y']);  
	}
	
	// update the score
	function update_score() {
		if (speed == 25) {
			score += 25;
		} else if (speed == 50) {
			score += 15;
		} else if (speed == 100) {
			score += 10;
		}
		document.getElementById('score').innerHTML = score;
	}
	
	// change difficult level
	function change_speed(level) {
		speed = level;
		
		// update which button is pressed
		document.getElementById('easy').className = 'easy';
		document.getElementById('medium').className = 'medium';
		document.getElementById('hard').className = 'hard';
		if (level == 25) {
			document.getElementById('hard').className = 'hard hard_active';
		} else if (level == 50) {
			document.getElementById('medium').className = 'medium medium_active';
		} else if (level == 100) {
			document.getElementById('easy').className = 'easy easy_active';
		}
		
		// if they are currently playing, reset movement interval
		if (press_keys) {
			clearInterval(snake_movement);
			snake_movement = setInterval(move_snake, speed);
		}
	}
	
	function pause(){
		clearInterval(snake_movement);
		press_keys = false;
		document.getElementById('pause').style.display = 'none';
		document.getElementById('play').style.display = 'block';
		document.getElementById('overlay').style.display = document.getElementById('paused').style.display = 'block';
	}
	
	function play(){
		snake_movement = setInterval(move_snake, speed);
		press_keys = true;
		document.getElementById('play').style.display = 'none';
		document.getElementById('pause').style.display = 'block';
		document.getElementById('overlay').style.display = document.getElementById('paused').style.display = 'none';
	}
	
	function game_over() {
		// end the snake's movement
		pause();
		
		// reset vars
		body = [];
		body_len = 3;
		
		// show game over screen
		document.getElementById('points').innerHTML = score;
		document.getElementById('paused').style.display = 'none';
		document.getElementById('overlay').style.display = document.getElementById('game_over').style.display = 'block';
		
		// clear canvas
		ctx.clearRect(0,0, canvas.width, canvas.height);
		
		// reset score
		score = 0;
		document.getElementById('score').innerHTML = score;
	}


if(location.search) {

window.addEventListener('touchstart', function (evt) {xDown = evt.touches[0].clientX; yDown = evt.touches[0].clientY;})
window.addEventListener('touchmove', function (evt) {
    if ( ! xDown || ! yDown || evt.touches.length > 1) return;

    var xUp = evt.touches[0].clientX;                                    
    var yUp = evt.touches[0].clientY;

    var xDiff = xDown - xUp;
    var yDiff = yDown - yUp;

    if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {
        if ( xDiff > 0 ) { if(dir!='right') left() } //left swipe
         else { if(dir!='left') right() } //right swipe
    } else {
        if ( yDiff > 0 ) { if(dir!='down') up() }  //up swipe
         else { if(dir!='up') down() } //down swipe
    }
    xDown = null;  //reset values
    yDown = null;
})
} else 

window.addEventListener('deviceorientation', function (e) {var tiltValue=e.gamma, tiltValub=e.beta
if(tiltValue>3 && dir!='down') up(); else if(tiltValue<-3 && dir!='up') down()
if(tiltValub>3 && dir!='left') right(); else if(tiltValub<-3 && dir!='right') left()  //6
}, false);

</script>
</head>
<body onload="canvas_support()">
<div id="header">
<div id="title">
<b style="font-size: 18px;">HTML5 Snake</b> <!--by <a href="http://goldfirestudios.com/blog/82/Friday-Freeday%3A-HTML5-Snake-Game">James Simpson</a>-->
</div>
<div id="score">0</div>
<div id="icons">
<div id="easy" class="easy easy_active" title="Easy" onclick="change_speed(100)">1</div>
<div id="medium" class="medium" title="Medium" onclick="change_speed(50)">2</div>
<div id="hard" class="hard" title="Hard" onclick="change_speed(25)">3</div>
<div id="pause" class="pause" onclick="pause()">&#9616;&#9616;</div>
<div id="play" class="play" onclick="play()">&#9658;</div>
</div>
</div>
<canvas id="board"></canvas>
<div id="overlay">
<div id="start">
<div style="position: absolute; top: 50%; margin-top: -100px; width: 100%;">
<div class="play_now" onclick="start()">Play Now!</div>
</div>
</div>
<div id="paused">
<div style="position: absolute; top: 50%; margin-top: -100px; width: 100%;">
<div style="margin: 0 auto; height: 100px; color: #fff; font-size: 500%;">PAUSED</div>
</div>
</div>
<div id="game_over">
<div style="position: absolute; top: 50%; margin-top: -200px; width: 100%;">
<div style="margin: 0 auto; height: 2100px; color: #fff; font-size: 500%; text=align: center;">
GAME OVER<br/>
<span style="font-size: 40%;">You scored <span id="points"></span> points!</span><br/><br/>
<div class="play_again" onclick="start()">Play Again!</div>
</div>
</div>
</div>
</div>
 

</body>
</html>
